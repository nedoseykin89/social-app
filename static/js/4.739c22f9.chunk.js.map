{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,0B,qGCa7HC,EATI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCEvBC,EANC,SAACT,GACb,OACI,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,iCCFpCC,EAAYC,YAAiB,IAepBC,cAAU,CAACC,KAAM,2BAAjBD,EAdQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cACtB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAK,iBAChCY,YAAY,qBACZC,SAAW,CAACC,IAAUX,MAE3B,6BACI,6CCoBGY,EAvBC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAOD,EAAE3B,GAAIA,GAAI2B,EAAE3B,QACtF6B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAOG,EAAE/B,QAChEsB,EAAMU,eAK/B,OAAKlC,EAAMmC,OAEH,yBAAKhC,UAAWC,IAAEuB,SACd,yBAAKxB,UAAWC,IAAEgC,cACbV,GAEL,yBAAKvB,UAAWC,IAAE4B,UACd,6BAAMD,IAGV,kBAAC,EAAD,CAAgBhB,SAbJ,SAACsB,GACnBrC,EAAMsC,YAAYD,EAAOH,oBAEL,kBAAC,IAAD,CAAU3B,GAAG,Y,wCCjBnCgC,EAA6B,SAACf,GAAD,MAAY,CACzCW,OAAOX,EAAMgB,KAAKL,S,OCkBPM,sBACXC,aAfkB,SAAClB,GACvB,MAAO,CACHC,YAAaD,EAAMC,gBAGE,SAACkB,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDVR,SAACW,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK/C,MAAMmC,OACT,kBAACU,EAAcE,KAAK/C,OADI,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACXyC,IAAMH,WAUtC,OAFuCH,YAAQH,EAARG,CAAoCI,KCOhEL,CAIblB","file":"static/js/4.739c22f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__KgWzZ\",\"dialogsItems\":\"Dialogs_dialogsItems__34wkG\",\"active\":\"Dialogs_active__3eZ8x\",\"dialog\":\"Dialogs_dialog__1YBU7\"};","\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","\r\nimport React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {reduxForm, Field} from \"redux-form\"\r\nimport { Textarea } from '../../common/Form Controls/FormControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\n\r\nconst maxLength = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name=\"newMessageBody\"\r\n             placeholder=\"enter your message\"\r\n             validate ={[required, maxLength]}/>\r\n        </div>\r\n        <div>\r\n            <button>send</button>\r\n        </div>\r\n    </form>   \r\n    )\r\n}\r\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddMessageForm)\r\n","\r\nimport React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from './Message/Message';\r\nimport {reduxForm, Field} from \"redux-form\"\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key = {d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key = {m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n      props.sendMessage(values.newMessageBody);\r\n    }\r\nif (!props.isAuth) return <Redirect to=\"/Login\"/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n               \r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n  })\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/Login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    \r\n      let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n      \r\n    return ConnectedAuthRedirectComponent\r\n}","\r\nimport React from 'react';\r\nimport { sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\nreturn {\r\n    dialogsPage: state.dialogsPage\r\n}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n}\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    \r\n)(Dialogs)"],"sourceRoot":""}