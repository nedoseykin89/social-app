{"version":3,"sources":["components/Navbar/Navigation/Navbar.module.css","api/api.js","components/Navbar/Friends/friend/Friend.module.css","components/Navbar/Friends/Friends.module.css","components/Users/users.module.css","components/common/preloader/Preloader.module.css","components/Navbar/Navigation/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/paginator/Paginator.jsx","assets/images/defaultAva.png","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/common/Form Controls/FormControls.js","assets/images/preloader.svg","components/common/preloader/Preloader.jsx","components/common/Form Controls/FormControls.module.css","components/common/paginator/paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["module","exports","instance","Axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Navbar","props","className","s","nav","item","to","activeClassName","active","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleisFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","state","action","followed","count","filter","id","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","defaultAva","userPhoto","alt","disabled","some","name","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","styles","formSummaryError","message","messages","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","friendInfo","sidebarReducer","redusers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","formReducer","app","appReduser","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SocialApp","StrictMode","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","getUserProfile","setStatus","newPost","postId","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.170d3cb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1cbJa\",\"item\":\"Navbar_item__2GUbc\",\"active\":\"Navbar_active__1XtZ8\"};","import * as Axios from 'axios';\r\n\r\nconst instance = Axios.create ({\r\n    withCredentials : true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"8f7421c0-04d1-45b8-8257-1b5c248d8e9e\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n     },\r\n     follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n     },\r\n     unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n       return  profileAPI.getProfile(userId)\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    \r\n    getProfile(userId) {\r\n       return  instance.get(`profile/`+ userId)\r\n    },\r\n    getStatus(userId) {\r\n        return  instance.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus(status) {\r\n        return  instance.put(`profile/status`, {status: status})\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n        \r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n        \r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n        \r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__1BnJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsBlock\":\"Friends_friendsBlock__2ngfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3ARGj\",\"www\":\"users_www__rs7Fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3I1mR\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from '../Friends/Friends';\r\n\r\nimport s from \"./Navbar.module.css\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n         <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n         </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n        </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n        </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n        </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n        </div>\r\n        {/* <Friends friendInfo={props.state.friendInfo}/> */}\r\n\r\n    </nav>\r\n   \r\n  )\r\n}\r\nexport default Navbar;","\r\nimport React from 'react';\r\nimport s from \"./News.module.css\";\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","\r\nimport React from 'react';\r\nimport s from \"./Music.module.css\";\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n           Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","\r\nimport React from 'react';\r\nimport s from \"./Settings.module.css\";\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n           Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n              \r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n                \r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.count }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleisFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleisFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleisFetching(false))\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator)  => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await apiMethod(userId)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(actionCreator(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from './paginator.module.css';\r\nimport cn from 'classnames'\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize );\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber -1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={()=> {setPortionNumber(portionNumber -1)}}>PREV</button>}\r\n            {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn ({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                key ={p}\r\n                onClick={(e) => { \r\n                    onPageChanged(p)\r\n                 }}>{p}</span>\r\n            })}\r\n            { portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n      \r\n}\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/defaultAva.3468e99e.png\";","import React from 'react';\r\nimport s from './users.module.css';\r\nimport defaultAva from '../../assets/images/defaultAva.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return <div> \r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : defaultAva} \r\n                            className={s.userPhoto} alt=\"img\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)} \r\n                                onClick={ () => { unfollow(user.id)}}>\r\n                                    Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                             onClick={() => { follow(user.id) }}>\r\n                                 Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n          \r\n    </div>\r\n}\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return <div>\r\n     \r\n        <Paginator currentPage={currentPage} onPageChanged= {onPageChanged}\r\n         totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n         <div>\r\n        {\r\n            users.map(u => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                follow= {props.follow}  unfollow = {props.unfollow} /> )\r\n        }\r\n    </div>\r\n    </div> \r\n}\r\n\r\n\r\nexport default Users;","import {createSelector} from 'reselect'\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector( getUsersSelector,\r\n     (users) => {\r\n     return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return  state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return  state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return  state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { unfollow, follow, setCurrentPage,  toggleFollowingProgress, requestUsers} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getUsers, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let  {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize)\r\n     \r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress = {this.props.followingInProgress} />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state) ,\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from \"./Header.module.css\";\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n        <img src='https://is5-ssl.mzstatic.com/image/thumb/Purple124/v4/b6/c3/cb/b6c3cb54-5fd6-3d1f-7b13-255aa6e56b3e/AppIcon-0-0-1x_U007emarketing-0-0-0-7-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/246x0w.png' />\r\n     <div className={s.loginBlock}>\r\n        {props.isAuth \r\n        ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div> \r\n       : <NavLink to={'/login'}>Login</NavLink> }\r\n       \r\n     </div>\r\n      </header>\r\n    )\r\n}\r\nexport default Header;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\n\r\nconst SET_USER_DATA = 'network/auth/SET_USER_DATA';\r\nlet initialState = {\r\n    userId: null,\r\n      email: null,\r\n      login: null,\r\n      isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n            ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: \r\n    {userId, email, login, isAuth} })\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    \r\n      if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData (id, email, login, true))\r\n      }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe)\r\n    \r\n      if(response.data.resultCode === 0) {\r\n       dispatch(getAuthUserData())\r\n      } else {\r\n          let message = response.data.messages.length > 0 ?  response.data.messages[0] : \"Some error\" \r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n      }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout()\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData (null, null, null, false))\r\n      }\r\n}\r\nexport default authReducer;","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\n\r\n  \r\nclass HeaderContainer extends React.Component {\r\n \r\n   render () {\r\n  return <Header {...this.props}/>  \r\n    \r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, { logout})(HeaderContainer) ;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {reduxForm, Field} from \"redux-form\"\r\nimport { required } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/Form Controls/FormControls';\r\nimport {login} from '../../redux/auth-reducer'\r\nimport styles from './../common/Form Controls/FormControls.module.css'\r\nimport { Redirect } from 'react-router-dom';\r\nconst LoginForm = ({handleSubmit, error}) => {\r\nreturn (\r\n    <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")} \r\n       \r\n       { error && <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm ({form: 'login'}) (LoginForm)\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n       <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n    }\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport authReducer, { getAuthUserData } from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS= 'INITIALIZED_SUCCESS ';\r\nlet initialState = {    \r\n      initialized: false\r\n};\r\n\r\n const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS})\r\n   \r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n   \r\n    Promise.all([promise]) \r\n    .then(() => {\r\n      dispatch(initializedSuccess())\r\n    })\r\n     \r\n}\r\n\r\nexport default appReducer;","\r\nlet initialState = {\r\n    friendInfo: [\r\n        { id: 1, src: \"https://wl-adme.cf.tsp.li/resize/728x/jpg/d8f/395/cf4c0d577d815b936cc1fb36db.jpg\", name: \"Alex\" },\r\n        { id: 2, src: \"https://lover.ru/cache/images/9c4d96175c1835df4854e91008218203/resizeCrop_700_525_center_center__.jpg\", name: \"Bibo\" },\r\n        { id: 3, src: \"https://cs10.pikabu.ru/post_img/2019/10/21/10/1571675205152516722.jpg\", name: \"Bobo\" }\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport sidebarReducer from \"./sidebar-reducer\"\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReduser from \"./app-reducer\";\r\nlet redusers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReduser\r\n\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../components/common/preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    \r\n\r\n      \r\n    return (props) => {\r\n      return <React.Suspense fallback={<Preloader />} >\r\n        <Component {...props } />\r\n      </React.Suspense>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navigation/Navbar';\nimport News from './components/News/News';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { Component } from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reducer'\nimport Preloader from './components/common/preloader/Preloader';\nimport store from './redux/redux-store';\nimport { Suspense } from 'react';\nimport { withSuspense } from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        {/* state={props.state.sidebar } для навбара */}\n        <div className=\"app-wrapper-content\">\n      \n          <Route path=\"/profile/:userId?\"\n            render={withSuspense(ProfileContainer)} />  \n          <Route path=\"/dialogs\"\n            render={withSuspense(DialogsContainer)} /> \n              \n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <Login />} />\n          <Route path=\"/news\" render={() => <News />} />\n          <Route path=\"/music\" render={() => <Music />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n        </div>\n      </div>\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\nconst SocialApp = (props) => {\n  return <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </React.StrictMode>,\n    </BrowserRouter>\n}\nexport default SocialApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SocialApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\n  ReactDOM.render( \n    <SocialApp />,\n    document.getElementById('root')\n  );\n\n\n\n\n// store.subscribe(() => {\n//   let state = store.getState();\n//   rerenderEntireTree(state);\n// });\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormControls.module.css'\r\n\r\nconst FormControl = ({ input, meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>\r\n               {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport  const createField = (placeholder, name, validators, component, props ={}, text =\"\") => (\r\n<div><Field placeholder={placeholder} name={name} \r\n                                         validate={validators} component={component}\r\n                                         {...props} /> {text}\r\n                                         \r\n                                         </div>)        ","export default __webpack_public_path__ + \"static/media/preloader.2c817e6f.svg\";","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\nimport s from './Preloader.module.css'\r\nlet Preloader = (props) => {\r\n    return <div className={s.preloader}>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3-r0E\",\"error\":\"FormControls_error__126WB\",\"formSummaryError\":\"FormControls_formSummaryError__3-vUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__1rH1n\",\"pageNumber\":\"paginator_pageNumber__2a0Wv\",\"selectedPage\":\"paginator_selectedPage__1hUhE\"};","\r\nexport const required = value => {\r\n    if(value) return undefined;\r\n    return \"Field is required\"\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength}  symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1W_Wm\",\"loginBlock\":\"Header_loginBlock__1APDI\"};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst DELETE_POST = 'DELETE_POST'\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, my little friend', likesCount: '8' },\r\n        { id: 2, message: 'hello, grown man', likesCount: '12' },\r\n        { id: 3, message: 'vas-vas', likesCount: '54' },\r\n        { id: 4, message: 'ok(', likesCount: '7' }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case 'SET_USER_PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case 'SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'DELETE_POST': {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Alex' },\r\n        { id: 2, name: 'Andrey' },\r\n        { id: 3, name: 'Kate' },\r\n        { id: 4, name: 'Jane' },\r\n        { id: 5, name: 'Serg' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How are you' },\r\n        { id: 3, message: 'fine' },\r\n        { id: 4, message: 'good' },\r\n        { id: 5, message: 'no good' }\r\n    ],\r\n\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SEND-MESSAGE':\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}